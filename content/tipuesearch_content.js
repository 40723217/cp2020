var tipuesearch = {"pages": [{'title': '林立翔的網站', 'text': '歡迎來到我的個人網頁！這裡詳實的紀載了有關計算機程式的相關課程，歡迎各位進行觀看！ \n Week7: Kaggle網站', 'tags': '', 'url': '林立翔的網站.html'}, {'title': '組員名單', 'text': '這裡可供前往組員的網站位置，點擊就進他的網站 \n 組長:40923252 魏柏旻 \n 40728238 廖建佑 \n 40923206 黃思喬 \n 40923216 陳彥廷 \n 40923220 陳胡文 \n 40923227 黃宇陽 \n 40923233 楊建霖 \n 40923237 詹明憲 \n 40923243 鄭丞崴 \n 40923253 蘇政嘉 \n 問題集錦 \n', 'tags': '', 'url': '組員名單.html'}, {'title': '功課集錦', 'text': '\n', 'tags': '', 'url': '功課集錦.html'}, {'title': 'HW1 - PC Hardware', 'text': '', 'tags': '', 'url': 'HW1 - PC Hardware.html'}, {'title': 'PCH 0 - Page1 導言', 'text': '電腦硬件線上課程 \n \n \n 電腦硬件是一門線上課程，其中的內容將以線上文本和活動的形式呈現 PC Hardware is an online course, where the content will be presented in the form of both text and activities. \n 與傳統課程比較會有更高度的靈活性，但學生必須有更高的自主性去承擔學習的責任 While you will have more flexibility than in a traditional course, you will also have more responsibility for your own learning. \n 為了這些，你將需要: \n 計劃如何瀏覽每個單元 確定如何使用課程的各種功能來幫助您學習 確定何時需要尋求其他支持 您需要了解課程內容，這些都有志助於學習 Plan how to work through each unit. Determine how to use the various features of the course to help you learn. Decide when you need to seek additional support. What You Need to Know About the Course \n 這些單元將會帶領並支持你成為獨立製作者，這會包刮: This course contains multiple modules. Each module has features designed to support you as an independent learner, including \n 學習目標：這些是本節末尾應該做的事情的描述。學習目標將使您能夠指導學習努力，並在探索內容和參與活動時監控進度。 Learning Objectives: These are descriptions of what you should be able to do at the end of a section. A Learning Objective will allow you to direct your learning efforts and enable you to monitor your progress as you explore the content and engage in the activities. \n 解釋性內容：這是每章的信息性“內容”。由簡短的段落，信息，示例，圖像和說明組成，此說明性內容包含以下內容： Explanatory Content: This is the informational “meat” of every chapter. Consisting of short passages of text with information, examples, images, and explanations, this explanatory content contains pieces such as: \n 演練：這些是嵌入在頁面中的視頻，以例證您正在探索的概念。他們可能會提供有關主題的更詳細說明，或指導您完成流程的各個步驟。 Walk-throughs: These are videos embedded in the pages to exemplify the concepts you are exploring. They may provide a more detailed explanation of a topic or guide you through the steps of a process. \n 示例：旨在說明該課程支持您實現的技能和學習目標的特定應用。 Examples: Designed to illustrate specific applications of the skills and learning objectives that the course supports you to achieve. \n 實驗室：模擬和實驗室活動旨在為您提供與各種硬件元素進行交互的機會。 Labs: Simulations and lab activities designed to give you an opportunity to interact with various hardware elements. \n 不少學生都會注意到側邊欄，這些側邊欄有兩個目的：（1）快速回顧概念，例如PC硬件材料中使用的“高度專業化的輸入設備”，以及（2）提供其他材料或背景信息您可能會發現令人驚訝和有趣的東西(但是不會進到測驗當中) Many Students Wonder sidebars: These sidebars serve two purposes: (1) to give a quick review of concepts, such as "highly specialized input devices," that are used in the PC Hardware material and (2) to provide additional material or background information that you may find surprising and interesting but that is not going to be assessed in the Quiz. \n 學習活動：在整個課程中散佈著不同類型的活動。它們包括: Learning Activities: There are different types of activities interspersed throughout the course. They include: \n 實踐中學習：實踐中學習的實踐遵循簡短的說明和示例。這些活動使您有機會研究和實踐關鍵思想。實踐中學習有提示和反饋，以在需要時指導您。 Learn By Doing activities: Learn By Doing activities follow the short explanations and examples. These activities give you the chance to investigate and practice key ideas. Learn By Doing activities have hints and feedback to guide you if you need it. \n "我了解了嗎？"：我了解了嗎？是您進行快速“自我審視”的機會。這些活動沒有提示，通常會跟隨“做中學”活動，以便您確定自己是否了解關鍵思想。這將幫助您確保已準備好進行分級活動 Learn By Doing activities: Learn By Doing activities follow the short explanations and examples. These activities give you the chance to investigate and practice key ideas. Learn By Doing activities have hints and feedback to guide you if you need it. \n 測驗：這些是評分的短期作業。每個模塊的末尾都有一個測驗。測驗將向您和您的老師展示您對關鍵概念的理解程度。如果您閱讀了該信息並在每個模塊中進行了活動，那麼您應該已經做好測驗的準備。 Quizzes: These are short assignments that are graded. There is a Quiz at the end of each Module. The Quiz will show you and your instructor how well you understand the key concepts. If you read the information and do the activities in each Module, you should be ready for the Quiz. \n 單元回饋認知：這些活動旨在支持您作為獨立學習者的發展，鼓勵您反思自己的進步併計劃繼續取得成功。這些活動包括： Metacognitive Activities: These activities are designed to support your development as an independent learner, encouraging you to reflect on your progress and plan for continuing success. These activities include: \n 回應活動：這些簡短的活動位於單元的末尾；他們鼓勵您反思本單元的學習進度，並估計您認為自己達到本單元學習目標的程度。這些活動還提供了一個分享繼續存在的問題和困難領域的地方（如果您與講師一起使用本課程，您的問題將與講師分享）。 My Response activities: These short activities are located at the end of the module; they encourage you to reflect on your progress through the module and estimate how well you believe you\'ve attained the module\'s learning objectives. These activities also provide a place to share continuing questions and areas of difficulty (if you\'re using the course in conjunction with an instructor, your questions will be shared with your instructor). \n 檢查點：這些活動位於課程的各個部分之後，這些部分可能特別具有挑戰性或需要其他練習。這些元認知檢查點可以鼓勵您回顧迄今為止的進展並進行自我評估：您準備好繼續嗎，還是您認為您需要其他材料，練習或自我評估？如果您感覺還沒有準備好繼續，可以使用這些檢查點來鏈接到其他學習資料。 Checkpoints: These activities are located across the course after sections of content that can be particularly challenging or require additional practice. These metacognitive checkpoints encourage you to review your progress so far and assess yourself: are you ready to continue, or do you believe you need additional materials, practice, or self-assessment? If you feel that you\'re not ready to proceed, these checkpoints provide links to additional learning materials. \n \n', 'tags': '', 'url': 'PCH 0 - Page1 導言.html'}, {'title': 'Page2', 'text': "此時需要在特定的狀況下選擇正確的學習策略 \n \n 正應該要邊做邊學 \n Q1:Joe剛剛啟動了內存和BIOS模塊。 他想盡快通過並參加測驗。 當他單擊該單元時，他看到一堆文本，上面散佈著一些活動，並試圖決定如何進行。 Joe has just started the Memory and BIOS Module. He wants to get through it as quickly as possible and take the Quiz. As he clicks through the unit, he sees a bunch of text with some activities sprinkled throughout, and is trying to decide how to proceed. \n 以下哪種學習策略對Joe可能最有效？ Which of the following strategies would likely be most effective and efficient for Joe? \n Joe應該直接參加學習活動，而不必閱讀說明性文字。 對於每項活動，他應選擇不同的答案選項，以查看它們是對還是錯，並閱讀顯示的反饋。 Joe should jump straight to the learning activities without reading the explanatory text. For each activity, he should select different answer choices to see if they’re right or wrong and read the feedback that appears. 不正確，邊做邊學可以是一個好主意。但是，Joe應該記住，對正確和不正確答案的反饋不如解釋性文本那麼完整，因此他將錯過重要信息。儘管他可以從他已經知道的概念上完成更多的活動中受益，但這並不是他時間上最有效的利用。相反，他應該將注意力集中在涵蓋他尚不了解的概念的活動和文本上。 Incorrect. Learning by doing can be a good idea. However, Joe should keep in mind that the feedback for correct and incorrect answers is not as complete as the explanatory text, so he will miss important information. Although he can benefit from completing more activities on concepts he already knows, this isn't the most efficient use of his time. Instead, he should be focusing his attention on activities and text that cover the concepts he doesn't already know. \n Joe應該閱讀解釋性說明並完成學習活動。 Joe should read the explanatory text and complete the learning activities. 正確。 通過評估自己已經知道和不知道的知識，喬為自己提供了練習獨立學習的機會。 Correct. By evaluating what he already knows and doesn't know, Joe is giving himself a chance to practice independent learning. \n Joe應該計劃在那個欠缺實習的星期上課，而不是試圖找出自己繼續上課的最佳方式。 Joe should plan to attend class that week rather than trying to figure out the best way to proceed on his own. 不正確，這種方法非常無效。由於Joe尚未事先完成任何材料的學習，因此他將不知道在課堂上要問什麼問題。在嘗試自己學習教材前尋求幫助，Joe將錯過獨立學習的機會。 Incorrect. This approach is very ineffective; since Joe hasn't worked through any of the material beforehand, he will not know what questions to ask in class. By seeking help before trying to learn the material himself, Joe also misses the chance to practice learning independently. \n Joe應該從頭到尾直接閱讀本單元，跳過活動。 Joe should read the unit straight through from beginning to end, skipping the activities. 不正確，儘管閱讀文本將為Joe提供該單元的信息內容，但跳過這些活動，他將錯過練習和檢查他理解的機會。他還需要利用預評估的結果，來幫助他認識是需要系統地工作，還是應該專注於特定技能。 Incorrect. Although reading the text will provide Joe with the information content of the unit, by skipping the activities he misses the chance to practice and check his understanding. He also needs to use the results from his Pre-Assessment to help him recognize whether he needs to work through the unit systematically or if he should focus on specific skills. \n Joe正在權衡此處概述的選項，以計劃策略。 由於大多數人都忽略了計劃，所幸Joe是選擇簡單地開始手頭的任務。 儘管花費更少的時間計劃以實際完成工作似乎更為有效，但最終可能會效率低下。 請考慮一下，如果您不花時間去指導路線或計劃繞行建築彎道的路線，那麼需要花費多長時間。 您可以以幾乎相同的方式來考慮PC硬件-如果您不首先弄清已經知道的知識和將精力集中在什麼地方，則需要花費更長的時間才能完成課程。 \n 實際上，使專家與新手區分開的特徵之一是，專家花費更多的時間來計劃他們執行任務的方法，而花更少的時間實際完成任務。 新手則相反—匆匆完成了計劃階段，花了更多的時間完成總體任務。 \n 在此頁的邊欄，將會帶你觀看不同的問題，以利你進行接下來的活動。 \n Page2-Question \n Alex剛剛開始了網絡硬件模塊的在線工作。 他想盡快解決它。 但他也想在測驗中表現出色。 他掃描了第一頁，並看到了文字，示例和一些活動。 他正在嘗試制定計劃以學習此頁面上的材料。 \n 以下是他考慮用於學習第一頁材料的一些策略。 您認為哪些策略可以幫助Alex學習PC硬件並為測驗做準備？  \n 為每個選項選擇是或否。 Alex has just started the online work for the Networking Hardware Module. He wants to get through it as quickly as possible. But he also wants to do well on the Quiz. He scans the first page and sees text, examples, and some activities. He is trying to make a plan for learning the material on this page. \n 閱讀文本和示例，並按照活動在頁面上顯示的順序進行操作。 Read the text and examples and work through the activities in the order that they appear on the page. 是的。 我們設計了本課程中的問題，以幫助您了解示例中解釋的關鍵思想。 因此，如果您在嘗試活動之前閱讀了此材料，則將學得最好。 此外，對於正確答案和錯誤答案的反饋也沒有文字說明那麼多。 因此，如果僅嘗試解決問題，則會丟失重要信息。 Yes. We designed the problems in this course to help you understand the key ideas explained in the examples. So you will learn best if you read this material before attempting the activities. Also the feedback for correct and incorrect answers doesn’t have as much information as the text. So if you only try the problems, you’ll be missing important information. \n 直接進入活動而不閱讀文本。 然後，對於每個活動，開始選擇不同的答案，以查看對與錯。 閱讀出現的反饋。 Go straight to the activities without reading the text. Then, for each activity, start picking different answers to see what is right and wrong. Read the feedback that appears. 否。 本課程中的問題旨在幫助您理解示例中解釋的關鍵思想。 因此，如果您在嘗試活動之前閱讀了此材料，則將學得最好。 此外，對於正確答案和錯誤答案的反饋也沒有文字說明那麼多。 因此，如果僅嘗試解決問題，則會丟失重要信息。 No. The problems in this course are designed to help you understand the key ideas explained in the examples. So you will learn best if you read this material before attempting the activities. Also the feedback for correct and incorrect answers doesn’t have as much information as the text. So if you only try the problems, you’ll be missing important information. \n 閱讀頁面頂部的學習目標。 跳過文本并快速閱讀活動以熟悉您必須要做的事情。 然後返回並閱讀本文和示例，並按順序進行活動。 Read the learning objective at the top of the page. Skip the text and read through the activities quickly to get familiar with what you have to be able to do. Then go back and read the text and examples and work the activities in order. 是的。 通過閱讀目標並預覽活動，Alex將能夠更有效地計劃以研究頁面上的材料。 例如，他可以估計頁面需要多長時間才能完成。 他還可以考慮頁面上的材料與他在課堂上所做的事情之間的關係。 Yes.By reading the objective and previewing the activities, Alex will be able to plan more effectively for studying the material on the page. For example, he could estimate how long the page will take to complete. He could also think about how the material on the page relates to what he did in class. \n 由於Alex著急，他應該閱讀示例並跳過活動。 Since Alex is in a hurry, he should read the examples and skip the activities. 否。儘管閱讀示例將幫助Alex學習內容，但其餘的活動將幫助他確定自己是否有真正理解目前閱讀的內容。 No.Although reading the examples will help Alex learn the content, the activities will help him determine if he really understands what he read. \n 由於Alex著急，他應該在頁面上挑選一些活動，然後返回並尋找類似的示例來指導他。 Since Alex is in a hurry, he should pick out a few activities on the page then go back and look for a similar example to guide him. 否。當Alex從傳統數學教科書中學習程序時，這可能是一種適用於Alex的策略。 但是在此過程中，Alex不會看到帶有許多類似問題的長問題集。 相反，我們設計了一些活動來幫助您學習大創意，而不是練習程序。 因此，每項活動都以新的方式呈現信息或將大創意應用到新的環境中。 亞歷克斯將需要做所有的活動才能為測驗做好準備。 No.This might be a strategy that worked for Alex when he learned procedures from a traditional math textbook. But in this course, Alex will not see long problem sets with many similar problems. Instead, we designed the activities to help you learn big ideas, as opposed to practice procedures. So each activity presents information in a new way or applies the big ideas to new contexts. Alex will need to do all the activities to be ready for the Quiz. \n", 'tags': '', 'url': 'Page2.html'}, {'title': 'Page3', 'text': '在特定情況下識別適當的學習策略。 Recognize appropriate study strategies in particular situations. \n Joe和Alex正在發展的技能是單元認知的一部分。 他們每個人都在學習用於學習特定主題的計劃策略技能。 \n 單元認知 （定義）單元認知或“思考你的思路”是您對自己作為學習者的意識以及對自己的學習進行調節的能力。 它涉及五個不同的技能： 1.評估任務。 2.評估您的優點和缺點。 3.規劃方法。 4.應用策略並監控績效。 5.反思並根據需要進行調整。 \n 下方顯示了單元認知循環的一個示例。 Step1:Assess the task 評估任務 了解完成任務涉及的內容（成功所需的步驟或組件）以及任何約束條件（時間，資源） \n Step2:EVALUATE strengths and weaknesses 評估優勢與劣勢 評估你自己有關專案的技能與知識 \n Step3: Plan 計畫 為了製定適當的計劃，請考慮您對任務的評估以及對自身優勢和劣勢的評估。 \n Step4:Apply strategies monitor performance\xa0應用策略並檢查績效 在執行任務時請不斷監視進度，將您所處的階段與要實現的目標進行比較。 \n Step5:Reflect 反應 回顧哪些有用，哪些是無用的策略，以便您下次可以調整方法，並在需要時重新閱讀一次。 \n \n 行動中的元認知 Metacognition in Action \n 您獲得一項任務，詢問自己： You get an assignment and ask yourself: \n “這項作業確切涉及什麼，我在本課程中從中學到了什麼？” “What exactly does this assignment involve and what have I learned in this course that is relevant to it?” \n 您正在通過評估任務並評估與之相關的優缺點來鍛煉第一和第二元認知技能。 如果您考慮需要採取什麼步驟來完成作業並確定何時開始合理的訓練，那麼您正在通過計劃來鍛煉技能3。 如果您按計劃開始工作，並且意識到自己的工作速度比預期的要慢，那麼您將通過應用策略和監控績效來使技能4發揮作用。 最後，如果您根據任務的時間框架來反思自己的績效，並且發現一種同樣有效但更有效的工作方式，那麼您將掌握技巧五，根據需要反思和調整方法。 You are exercising metacognitive skills #1 and #2 by assessing the task and evaluating your strengths and weaknesses in relation to it. If you think about what steps you need to take to complete the assignment and determine when it is reasonable to begin, you are exercising skill #3 by planning. If you start in on your plan and realize that you are working more slowly than you anticipated, you are putting skill #4 to work by applying a strategy and monitoring your performance. Finally, if you reflect on your performance in relation to your time frame for the task, and discover an equally effective but more efficient way to work, you are engaged in skill #5 of reflecting and adjusting your approach as needed. \n', 'tags': '', 'url': 'Page3.html'}, {'title': 'Page4', 'text': '在特定情況下識別適當的學習策略。 Recognize appropriate study strategies in particular situations. \n 單元認知不是火箭科學那般快速。在某些方面，它是相當普通且直觀的。但是，您會感到驚訝的是，人們經常缺乏強大的單元認知技能，而你會因為單元認知能力較弱會削弱學習效果感到很糟糕。 要測試您自己的元認知能力，請閱讀以下每種情況，並確定學生正在努力使用的單元認知。 Metacognition is not rocket science. In some respects, it is fairly ordinary and intuitive. Yet you’d be surprised how often people lack strong metacognitive skills, and you’d be amazed by how much weak metacognitive skills can undermine performance. To test your own powers of metacognition, read each of the scenarios below and identify which metacognitive skill the student is struggling with. \n Rudolfo預計學期將會非常繁忙，因此他會閱讀所有的說明，並在學期的第二週之前完成所有的學習活動。 雖然這可以騰出時間去做其他課程，但他發現當他參加最後的測驗時，他已經忘記了很多所學的知識。 這是因為魯道夫未能-正確評估學習結果。 準確評估自己的長處和短處，併計劃有效的策略來完成課程。 Rudolfo anticipates a very busy semester, so he reads all of the exposition and completes all of the learning activities by the second week of the semester. While this frees up his time for other courses, he finds that when he goes to take the last Quiz, he has forgotten a lot of what he learned. Rudolfo failed to\xa0 --properly assess the task. accurately evaluate his own strengths and weaknesses.plan an effective strategy for working through the course. \n Rudolfo迄今為止在測驗之前完成工作的計劃是無效的。 因為他在學習和參加測驗之間花了很多時間，所以他腦海中的內容並不新鮮。 如果魯道夫在學習後立即完成了測驗，他忘記所學知識的風險就會降低。 Rudolfo’s plan to complete the work so far in advance of the Quizzes proved ineffective. Because he left so much time between studying and taking the Quizzes, the material was not fresh in his mind. Had Rudolfo completed the Quizzes right after studying, he could have reduced the risk that he would forget what he learned. \n Penelope跳過了前段說明，直接進入了學習階段，從而在整個PC硬件課程中都做了自己的工作。 當她沒有正確地選擇一項學習活動的答案時，她會嘗試其他答案，直到找到正確的答案為止。 不幸的是，她沒有通過測驗，必須重新參加。 “哦，好。”她嘆了口氣。 “重頭開始吧。” 她再次打開第一個單元，跳過前段說明，直接進入學習階段。 Penelope她缺少調整自己的方法。 Penelope has worked her way through the entire PC Hardware course by skipping the exposition and jumping straight to the learning activities. When she doesn’t get an answer right on one of the learning activities, she tries the other answers until she discovers the correct one. Unfortunately, she does not pass the Quiz and has to retake it. “Oh well,” she sighs. “Back to the drawing board.” Once again, she opens the first unit, skips the exposition, and goes straight to the learning activities. Penelope has failed to adjust her approach. \n 這是最好的答案。 佩內洛普（Penelope）正在採用相同的失敗方法來第二次為測驗做準備，而第一次沒有從失誤中吸取教訓。 Strong metacognitive skills are essential for independent learning, so use the experience of monitoring your own learning for PC Hardware as an opportunity to hone these skills for other classes and tasks. \n Pablo這個學期很忙，他不想給PC 硬件太多時間。 因此，他忽略了所有單元的死線，認為他將在學期末度過整個學期，貫穿整個課程。 最後，他沒有通過測驗。 他最大的錯誤是，他並沒有正確評估任務。 Pablo has a busy semester, and he does not want to give too much time to PC Hardware. So he ignores all of the deadlines, figuring that he’ll spend an entire weekend at the end of the semester working through the whole course. In the end, he fails the Quiz. His biggest mistake was that he did not properly assess the task. \n Pablo低估了這項任務，並留給自己太多的時間來準備測驗。 由於他沒有適當計劃，這種低估也反映在他的策略中。 Pablo underestimated the task, and left himself too little time to prepare for the Quiz. This underestimation is also reflected in his strategy, as he has not planned appropriately. \n \n 強大的單元認知技能對於獨立學習至關重要，因此，請檢查自己對PC硬件的學習經驗，以此作為磨練這些技能來進行其他課程和任務的機會。 Strong metacognitive skills are essential for independent learning, so use the experience of monitoring your own learning for PC Hardware as an opportunity to hone these skills for other classes and tasks.', 'tags': '', 'url': 'Page4.html'}, {'title': 'PCH 1 - Page5 基礎', 'text': '重點單元： \n 描述計算機的基本組件。 Describe a computer’s basic components. \n 標識計算機的硬件，軟件和固件。 Identify a computer’s hardware, software, and firmware. \n 識別和分類輸入和輸出。比較並對比各種連接接口和電纜，並說明其用途。 Identify and categorize inputs and outputs. Compare and contrast various connection interfaces and cables and explain their purposes. \n 將通用外圍設備連接到標準端口。 Connect common peripherals to standard ports. \n 快速連結： \n \n 6介紹 Introduction \n \xa0 7計算機功能：輸入，輸出，存儲和處理 Functions of Computers: Input, Output, Storage, and Processing \n 8硬件 Hardware \n 9軟件 Software \n 10固件 Firmware \n 11組件化/標準化 Componentization/Standardization \n 12連接接口和電纜 Connection Interfaces and Cables \n 13台式機系統單元的外部組件 External Components of the Desktop System Unit \n 14通用外設與標準端口之間的連接 Connections Between Common Peripherals and Standard Ports \n 15USB和PS_2 USB AND PS_2 \n 16SCSI和FireWire SCSI and FireWire \n 17串行和並行端口 Serial and Parallel Ports \n \n', 'tags': '', 'url': 'PCH 1 - Page5 基礎.html'}, {'title': 'Page6', 'text': 'PCH 1 /簡介 本課將介紹PC硬件的基礎知識。 首先，您將學習桌上型計算機和筆記型計算機的各個部分。 接下來，您將發現與計算機關聯的基本術語，例如硬件，軟件和固件。 您將學習計算機的最基本功能：輸入，輸出，存儲和處理。 接下來，您將探索計算機上的各種輸入和輸出接口以及相關的電纜。 最後，您將回顧通用外設之間的連接並討論標準端口。 This lesson will cover the basics of PC Hardware. First, you will learn the various parts of both desktop and laptop computers. Next, you will discover basic terms that are associated with computers, such as hardware, software, and firmware. You will learn the most basic functions of a computer: input, output, storage, and processing. Next, you will explore various input and output interfaces on the computer and the associated cables. Finally, you will review connections between common peripherals and discuss the standard ports. \n', 'tags': '', 'url': 'Page6.html'}, {'title': 'page7', 'text': '描述計算機的基本組件。 Describe a computer’s basic components. \n 是什麼要件使計算機成為一台計算機？ 一台計算機是否必須具有某些部件才能視為計算機？ 考慮一下1980年代的計算機：它們都包括顯示屏，鍵盤和處理單元。 隨著時間的流逝，計算機已經演變為看起來不像“典型”計算機的設備。 考慮iPhone或Android平板電腦，其中輸入方法依靠觸摸，而不使用單獨的鍵盤。 下面顯示的計算器手錶怎麼樣？ 是電腦嗎？ What makes a computer a computer? Does a computer have to have certain pieces to be considered a computer? Consider the computers of the 1980s: they all included a display screen, a keyboard, and a processing unit. Over time, the computers have evolved into devices that do not look like a “typical” computer. Consider the iPhone or Android tablet, where the method of input relies on touch, without the use of a separate keyboard. How about the calculator watch displayed below; is it a computer? 計算器手錶。 照片由 Tim Deering 根據CC-BY-NC許可使用 Calculator watch. Photo\xa0used\xa0under\xa0CC-BY-NC\xa0license\xa0from\xa0 Tim Deering \n 不論機器的外形尺寸如何，計算機都具有四個基本功能——輸入，輸出，存儲和處理。 下面顯示了這些功能如何協同工作。 Regardless of the\xa0 form factor \xa0 of the machine, four basic functions — input, output, storage, and processing — make a computer. Below is a display of how those functions work together. \n \n 因此，當我們考慮計算機的歷史和計算機的未來時，我們必須考慮什麼是計算機，什麼不是計算機。顯然，我們的桌機和筆記型電腦是計算機，因為它們執行輸入，處理，輸出和存儲功能。但是，由於我們的手機和智能手機執行所有這些功能，所以它們也是如此。那我們的電視呢？其中許多計算機也是複雜的計算機，因為它們使用遙控器從我們的輸入中獲取信息，處理信息並返回輸出，例如點播電影。這些電視中的許多電視也會存儲信息，例如您喜歡的頻道，甚至是視頻內容本身，以供以後播放。甚至有些恆溫器都是計算機，因為它們也執行這些功能，例如NEST和其他流行品牌的“智能恆溫器”。記住，對某物是否是計算機的主要確定取決於它執行的功能：它執行輸入，處理，輸出和存儲嗎？如果是這樣，則它是一台計算機。 So, as we consider the history of computers and the future of computers, we must consider what is and what is not a computer. Obviously, our desktops and laptops are computers, since they perform the input, processing, output, and storage functions. But so also are our cellular phones and smartphones, since they perform all these functions. What about our televisions? Many of these are complex computers as well, since they take information from our input using the remote control, process the information, and return an output, such as an on-demand movie. Many of these televisions also store the information, such as your favorite channels or even the video content itself for later playback. Even some thermostats are computers, since they also perform these functions, such as the “smart thermostats,” like the NEST and other popular brands. Remember, the main determination of whether something is a computer or not relies on the functions it performs: does it perform input, processing, output, and storage? If so, then it is a computer. \n 在此處閱讀有關不同類型計算機的更多信息。 Read more about different types of computers\xa0 here . \n ———邊學邊做 \n 是非題：現代汽車就是計算機。 True or False: A modern car is a computer. \n 是的。 現代汽車是計算機，因為存在四個功能：輸入，輸出，處理和存儲。 一個示例是儀表板顯示屏指示輪胎氣壓低時。 輸入是汽車的胎壓測量值。 汽車會存儲正確的壓力並比較實際壓力。 這個比較就是處理。 輸出的是在儀表板上點亮的光，以警告駕駛員壓力低。 Correct. Modern cars are computers because four functions exist: input, output, processing, and storage. An example would be when a dashboard display indicates low tire pressure. The input is the car’s measurement of tire pressure. The car stores the correct pressure and compares the actual pressure. This comparison is the processing. The output is the light that illuminates on the dashboard to alert the driver that the pressure is low. \n 以下哪一項不是使計算機成為計算機的功能？計算機製造數據。 Which of the following is not a function that makes a computer a computer? A computer manufactures data. \n 對某物是否為計算機的主要確定取決於它是否執行四個功能：輸入，處理，輸出和存儲。 製造數據不是這四個功能之一。 The main determination of whether or not something is a computer relies on whether it performs four functions: input, processing, output, and storage. Manufacturing data is not one of these four functions. \n', 'tags': '', 'url': 'page7.html'}, {'title': 'page8', 'text': '識別和分類輸入和輸出。 比較並對比各種連接接口和電纜，並說明其用途。 Identify and categorize inputs and outputs. Compare and contrast various connection interfaces and cables and explain their purposes. \n 計算機系統包括硬件，軟件和固件。要構建計算機，我們必須首先收集所需的硬件。硬件是您可以觸摸和感覺到的計算機的一部分。當大多數人看到一台典型的計算機時，他們就會知道所使用的是物理組件，例如，硬金屬或塑料系統單元，中央處理器（CPU），電源，磁盤驅動器和其他必要組件。硬件受製造日期限制，特別是受安裝的主板限制。根據使用年限和可用性，某些硬件項目的獲取，維修或更換可能會很昂貴。例如，如果隨著時間的推移，計算機運行速度隨著添加新軟件的運行而變慢，則可能有必要增加計算機中稱為RAM（隨機存取存儲器）的物理內存量。為此，技術人員需要根據主板規格購買正確的大小，速度和內存類型，然後將其安裝在計算機中，這將增強其更快地處理信息的能力。 A computer system includes hardware, software, and firmware. To build a computer, we must first gather the required hardware. The hardware is the part of the computer that you can touch and feel. When most people see a typical computer, they understand that there are physical components to what they are using, such as the the hard metallic or plastic System unit, central processing unit (CPU), power supply, disk drives, and other essential components. Hardware is limited by its manufacture date and specifically by the motherboard installed. Depending on age and availability, some of the hardware items may be expensive to acquire, repair, or replace. For example, if the computer is running slower over time as you add newer software, it may be necessary to increase the amount of physical memory, called RAM (random access memory), in the computer. In order to do this, the technician would need to purchase the correct size, speed, and style of memory according to the motherboard specifications and install it in the computer which will then enhance its ability to process information more quickly. \n 計算機硬件由計算機的機械和電氣部分組成。數據以所謂的系統總線流經母板。在本課程中將進一步詳細討論的外部端口允許將外圍設備連接到系統單元。通用端口是USB，串行和並行端口。 Computer hardware consists of the mechanical and electrical parts of the computer. Data flows through the motherboard in what is known as the system bus. External ports, which are discussed in more detail further in this lesson, allow peripheral devices to be connected to the system unit. Common ports are USB, serial, and parallel ports. \n 外圍設備由連接到系統單元的硬件組成，並被指定為輸入，輸出或兩者。傳統的輸入設備示例是用於輸入數據的鼠標和鍵盤。 Peripheral devices consist of hardware attached to the system unit and are designated as input, output, or both. Traditional input device examples are the mouse and keyboard which are used to input data. \n 輸入設備：鍵盤和鼠標。 本照片由Ben Ward根據CC-BY-NC-ND許可使用。 Input devices: keyboard and mouse. Photo used under CC-BY-NC-ND license from Ben Ward. \n 輸出設備由通用項目組成，例如監視器，揚聲器和打印機。 所有這些設備都是計算機可以通過視覺或聽覺輸出向用戶提供反饋的方式。 Output devices consist of common items such as monitors, speakers, and printers. All of these devices are ways that the computer can give feedback to the user through either visual or auditory output. \n 傳統上，單個設備已演變為輸入和輸出。 通過振動向用戶提供反饋的遊戲操縱桿，當然觸摸屏顯示器現在兼用作兩者。 Traditionally singular devices have evolved to become both input and output. Gaming Joysticks which provide feedback to the user through vibrations and of course the touch-screen display now serve as both. 輸出設備：監聽器和揚聲器。 照片由WilliamHook根據CC-BY-SA許可使用。 Output devices: monitor and speaker. Photo used under CC-BY-SA license from WilliamHook. \n 中央處理器（CPU）是硬件，是計算機的“大腦”，是進行處理的中心點。 The central processing unit (CPU) is the hardware that is the “brains” of the computer and the central point where processing occurs. \n 中央處理器。這些照片由謝德茂（Edmund Tse）根據CC-BY-NC許可使用。 Central processing unit. Photo used under CC-BY-NC license from\xa0 Edmund Tse . \n CPU是計算機的主人。每個子系統，包括輸入，輸出和存儲系統，都與處理器交互並通過處理器交互。例如，處理器接收用戶的輸入（例如，鼠標雙擊屏幕上的文件），然後與存儲設備（例如，硬盤驅動器）進行交互以檢索文件。發生處理，這是獲取已輸入數據並將其轉換為可用數據的行為。然後，處理器通過將文件通過輸出子系統輸出到監視器來創建文件的可視顯示。 The CPU is the master of the computer. Every subsystem, including the input, output, and storage systems, interacts with and through the processor. For example, the processor receives the user’s input (such as a mouse double-clicking a file on the screen), then interacts with the storage device (such as the hard drive) to retrieve the file. Processing, which is the act of taking data that has been input and converting it to something usable, occurs. Then, the processor creates a visual display of the file by outputting it to the monitor through the output subsystems. \n 一些硬件充當存儲。存儲功能在存儲子系統中處理。該領域專注於保存數據以備將來使用和檢索的行為。早期計算機的存儲空間非常有限，因此每次您想使用它時，都必須在運行該程序之前先輸入每個程序。在現代計算機中，存儲空間成倍增長。甚至基本計算機都具有數百GB甚至TB的可用信息存儲。計算機在日常操作中同時使用短期和長期存儲。例如，當您為學校鍵入報告時，在鍵入和編輯文檔時，報告將存儲在計算機的短期內存（RAM）中。保存文檔後，會將其傳輸到硬盤驅動器（內部）或USB閃存驅動器（外部）以進行長期存儲和以後的訪問。| Some hardware serves as storage. The storage functions are handled in the storage subsystems. This area is focused on the act of saving data for future use and retrieval. Early computers had very limited storage, so each program had to be entered prior to running it each time you wanted to use it. In modern computers, storage space has grown exponentially; even basic computers have hundreds of gigabytes or even terabytes of information storage available. Computers use both short-term and long-term storage in their daily operations. For example, when you are typing up a report for school, it is stored in the short-term memory (RAM) of the computer while you are typing and editing the document. Once you save the document, it is transferred to the hard drive (internal) or a USB flash drive (external) for long-term storage and future access. \n', 'tags': '', 'url': 'page8.html'}, {'title': 'page9', 'text': '標識計算機的硬件，軟件和固件。 Identify a computer’s hardware, software, and firmware. \n 軟件是完全無形的，不能被實際觸摸。最純粹形式的軟件是由一系列1和0（位）組成的代碼，這些代碼向計算機提供有關如何執行特定任務的指令。雖然您可以觸摸存儲軟件的介質（例如CD或DVD），但實際上不能觸摸軟件代碼本身。 Software is completely intangible and cannot be physically touched. Software, in its purest form, is a series of 1s and 0s (bits) that make up the code that gives the computer its instructions on how to perform a certain task. While you may be able to touch the media on which the software is stored (like a CD or DVD), you cannot really touch the software code itself. \n 計算機所需的最基本的軟件是操作系統。當今市場上有許多操作系統，其中包括Microsoft Windows，Macintosh OS X，Linux，Android和iOS的各種版本。操作系統提供了用於在計算機中保存，檢索，更改，打印和傳輸信息的標準方法。操作系統包含內部命令，這些內部命令是操作系統內置的程序，用於執行基本任務，例如文件管理（刪除，複製和重命名文件）。此外，操作系統還包含外部命令，這些命令是添加的程序，可以完成更複雜的功能，例如對硬盤驅動器進行碎片整理或處理網絡上另一台計算機的遠程控制。 The most basic software that a computer requires is the operating system. There are numerous operating systems on the market today, including various versions of Microsoft Windows, Macintosh OS X, Linux, Android, and iOS, to name just a few. The operating system provides the standard methods for saving, retrieving, changing, printing, and transmitting information in the computer. Operating systems contain internal commands, which are programs that are built into the operating system to perform basic tasks such as file management (delete, copy, and rename files). Additionally, operating systems also contain external commands, which are added programs to complete more complicated functions, such as defragmentation of a hard drive or handling the remote control of another computer on the network. \n 最後，有稱為應用程序的軟件程序。這些程序用於創建，存儲，修改和查看您創建的信息。諸如Microsoft Office或Adobe Acrobat之類的應用程序允許您閱讀和創建文檔和演示文稿。可以將其他應用程序（例如游戲和Web瀏覽器）用於娛樂。 Finally, there are software programs called applications. These programs are used to create, store, modify, and view information that you create. Applications, such as Microsoft Office or Adobe Acrobat, allow you to read and create documents and presentations. Other applications, such as games and web browsers, may instead be used for entertainment. \n \n', 'tags': '', 'url': 'page9.html'}, {'title': 'page10', 'text': '固件是硬件和軟件的組合，通常稱為“芯片上的軟件”。固件允許控制芯片所連接的設備。固件芯片包含專用軟件，通常連接到主板，光盤驅動器（例如CD，DVD或藍光），大容量存儲設備和其他專用硬件。 Firmware is a combination of hardware and software, often called “software on a chip.” Firmware allows control of the device to which the chip is connected. A firmware chip contains specialized software and is often attached to motherboards, optical drives (such as CD, DVD, or Blu-ray), mass storage devices, and other specialized hardware. \n 在較早版本的固件中，除非更換了物理芯片，否則固件無法升級，但是近年來，固件被設計為“可刷新的”。這意味著，如果軟件過時或出現編程錯誤，則可以升級芯片。該固件“閃存”用最新版本替換了芯片上的舊軟件，從而提高了性能或增強了安全性。 In older generations of firmware, the firmware was not upgradable unless you replaced the physical chip, but in recent years firmware has been designed to be “flashable.” This means that the chip can be upgraded if the software is outdated or has a programming error. This firmware “flash” replaces the older software on the chip with the latest version, improving performance or enhancing security. \n 計算機中最常見的固件類型稱為BIOS（基本輸入/輸出系統），BIOS甚至在加載操作系統之前，即可為計算機提供最基本的任務。如果沒有BIOS，計算機將毫無用處，因為它甚至無法讀取硬盤驅動器並加載操作系統。固件具有持久性：與臨時存儲（例如RAM）不同，固件即使在斷電後仍保留在芯片上。 The most common type of firmware found in a computer is called the BIOS (basic input/output system), which provides the computer with the most basic of tasks before the operating system is even loaded. Without the BIOS, the computer would be rather useless, as it wouldn’t even be able to read the hard drive and load the operating system. Firmware is persistent: it remains on the chip even after the power is removed, unlike temporary storage (such as RAM). \n \n', 'tags': '', 'url': 'page10.html'}, {'title': 'page11', 'text': '標識計算機的硬件，軟件和固件。 Identify a computer’s hardware, software, and firmware. \n 組件化是將大型和復雜項目分解為簡單，可重用和可互換的部分的過程。多年來，計算機軟件和硬件是由獨立的公司製造的，這些公司只能在單個系統上工作。例如，如果IBM製作了網卡，則它不能在Compaq或Dell計算機中工作。多年來，硬件開發人員意識到，如果他們同意一套標準，他們可以創建可以使用標準接口構建為可以協同工作的組件，從而節省了時間，金錢和復雜性。現在，在面向對象的程序設計（一種標準化的程序設計方法）下的軟件世界中使用了相同的概念。 Componentization is the process of breaking down large and complex items into simple, reusable, and interchangeable pieces. For many years, computer software and hardware were made by individual companies building things that only worked for a single system. For example, if IBM made a network card, it would not work in a Compaq or Dell computer. Over the years, hardware developers realized that if they could agree to a set of standards, they could create components that could be built to work together using standard interfaces, which saves time, money, and complexity. This same concept is now being used in the software world under object-oriented programming — a standardized method of programming. \n 標準化允許每個人都可以遵循的一組規則，以便硬件可互操作，軟件可互操作。由於創建的輸入和輸出是標準化的，因此這提高了對硬件和軟件進行組件化的能力。例如，網頁以HTML（超文本標記語言）編碼，所有網絡瀏覽器都可以理解。因此，由於系統的標準化，用戶可以使用任何Web瀏覽器，並且仍然可以獲得他們感興趣的內容。 Standardization allows for a set of rules that everyone can follow so that hardware is interoperable and software is interoperable. This increases the ability to have componentization of hardware and software, since the input and output created are standardized. For example, web pages are coded in HTML (HyperText Markup Language), which all web browsers understand. Therefore, the user can use any web browser and still get the content they are interested in viewing because of the standardization of the system. \n', 'tags': '', 'url': 'page11.html'}, {'title': 'page12', 'text': '對輸入和輸出進行識別和分類。 比較並對比各種連接接口和電纜，並說明其用途。 Identify and categorize inputs and outputs. Compare and contrast various connection interfaces and cables and explain their purposes. \n 查看客戶的個人計算機時，您必須能夠通過視線輕鬆識別組成計算機的各種組件。 當您查看計算機的圖像時，會注意到各個部分，例如CD / DVD驅動器和存儲卡讀取器托架。 這兩個組件都將歸類為存儲子系統的一部分。 耳機插孔用於音頻輸出，而麥克風插孔用於音頻輸入。 USB和FireWire端口用於輸入和輸出以及存儲，具體取決於連接到端口的設備。 例如，如果我們將打印機連接到USB端口，它將用於輸出，但是如果我們將鼠標連接到USB端口，則它將用於輸入。 When looking at a customer’s personal computer, you must be able to easily identify the various components that make up the computer by sight. As you look at the image of the computer, you notice the various parts, such as the CD/DVD drive and the memory card reader bay. Both of these components would be classified as part of the storage subsystem. The headphone jack is used for audio output, while the microphone jack is used for audio input. The USB and FireWire ports are used for both input and output, as well as storage, depending on the device that is connected to the port. For example, if we connect a printer to the USB port, it would be used for output, but if we instead connected a mouse to the USB port, it would be used for input. \n 有關電纜和連接的更多信息，請觀看以下影片： \n Pace-IT：電纜和連接 \n 設備連接器和電纜-CompTIA A + 220-901-1.11 \n', 'tags': '', 'url': 'page12.html'}, {'title': 'HW2 - 亂數分組', 'text': 'HW2: Kaggle網站 \n import random\nimport requests\n\n# getNumList 主要在每組最低人數下, 將不足 10 人的分組\n# 平均分配至各組\ndef getNumList(total, eachGrp=10):\n    #print(total)\n    # total 為學生人數\n    # 至少每組都要確保有十名學生，因此\n    # eachGrp = 10;\n    # 可以分為"grpNum"(號碼)組\n    grpNum = total // eachGrp;\n    # 檢查grpNum\n    #print(grpNum) = 5\n    \n    #丟一些空位清單\n    splits = []\n    #當總數分為"組數"之後找到餘數\n    remainder = total % grpNum\n    #並計算一組的人數\n    calGrp = total // grpNum\n       \n    for i in range(grpNum):\n        splits.append(calGrp)\n           \n    #檢查分組\n    print(splits)\n    for i in range(remainder):\n        splits[i] += 1\n       \n    #檢查餘數分下來後，最後的分組\n    #print(splits);\n    return splits;\n\n# 儲存學生名單資料的 url\ntarget_url = "https://nfulist.herokuapp.com/?semester=1091&courseno=0776"\n#利用requests讀取url中的資料\nf = requests.get(target_url)\n#從target_url獲得學生名單\n#利用 splitlines() 將資料放入數列 studList\nstudList = f.text.splitlines()\n#每組預計分組的最低人數\nnum_in_one_group = 10\n#每組學員暫存數列\ngpList = []\n#全班分組數列\ngroup = []\n#各組人數數列\nnumList = []\n#get numList\nnumList = getNumList(len(studList), num_in_one_group)\n#check numList\n#列出已經補齊的各組人數數列\nprint("預計各組人數數列:" + str(numList))\n   \noutput = ""\ngth = 1\ninc = 0\n   \n# 弄亂 studList\nrandom.shuffle(studList)\noutput += "以下為尚未排序前的各組學員學號: \\n"\nfor i in numList:\n    # 列印區隔符號\n    output += \'=\' * 20 + "\\n";\n    output += "group " + str(gth) + " 有 " + str(i) + " 人: \\n"\n    # 每組學員暫存數列, 在此 reset\n    gpList = []\n    for j in range(i):\n        output += studList[j+inc] + "\\n"\n        # 在各分組數列中加入將對應的學員學號\n        gpList.append(studList[j+inc])\n         \n    gth = gth + 1\n    inc = inc + j\n    # 將各組學員數列依照學號排序\n    gpList.sort()\n    group.append(gpList)\n   \n# 列出尚未排序前的分組結果\nprint(output)\n# 列出已經完成排序的分組數列\nprint("已經排序後的分組數列:" + str(group))\n   \noutput = ""\n# 列出已經排序後的分組名單\noutput += \'=\' * 25 + "\\n"\noutput += \'以下為排序後的各組成員名單:\\n\'\ngth = 1\n   \n# 先列出純文字以 \\n 跳行組員資料\nfor i in range(len(group)):\n    # 列印區隔符號\n    output += \'=\' * 20 + "\\n"\n    output += "group" + str(gth) + "\\n"\n    gpList = []\n       \n    for j in range(len(group[i])):\n        output += str(group[i][j]) + "\\n"\n         \n    gth = gth + 1\n       \nprint(output) \n', 'tags': '', 'url': 'HW2 - 亂數分組.html'}, {'title': 'HW3 - PRACTICE PYTHON', 'text': '', 'tags': '', 'url': 'HW3 - PRACTICE PYTHON.html'}, {'title': '問題集錦', 'text': '\n', 'tags': '', 'url': '問題集錦.html'}, {'title': '問題1-4', 'text': '\n \n \n \n \n \n 問題一： \n \n \n \n 問題二： \n \n \n 問題三： \n \n \n 問題四： \n \n', 'tags': '', 'url': '問題1-4.html'}]};